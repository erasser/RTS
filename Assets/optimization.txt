https://learn.unity.com/tutorial/fixing-performance-problems?&_ga=2.258500874.1421638371.1644157922-1236908546.1626543225#5c7f8528edbc2a002053b596

• In GameController I do (1)fixedFrameCount % 3 and (2)fixedFrameCount % 4. Výpočty jsou tedy nerovnoměrné a provádějí se v dávkách.
    Zkusit inspectnout v profileru, zvážit rozložení kalkulací rovnoměrně do snímků. 
    Pro případ (1) by se to mohlo řešit sledováním času (nikoli snímků) pro každou jednotku, tím by se to "statisticky rozrovnoměrnilo".
    Pro případ (2) by se muselo vykalkulovat, které jednotky z listu mají provést pathfinding v aktuálním snímků.
    ! Změřit, kolik času zabere path finding (použít DateTimeOffset.Now.ToUnixTimeMilliseconds())
• There exists OnDemandRendering
• LOD models (LOD Group component)
• Mobile shader materials

TEST PERFORMANCE
════════════════
- InvokeRepeating vs. Coroutines vs. custom solution (time tracking) - https://forum.unity.com/threads/invokerepeating-vs-coroutines-performance.497208
- Raycast (vs. what? :D)
- Vector3.magnitude vs. my SquareRoot.cs from Vector3.sqrMagnitude
- Equals vs. ==  (comparing GameObjects)

TESTS ON MOBILE
===============
• It seems that if the game runs longer, FPS got higher after build
Lowest settings (2 units, no lasers, no info bars)          50
Lowest settings (2 units, no lasers)                        37  => * info bars costs 10+ FPS
Lowest settings + only full textured ground                 21  => heavy FPS impact of PB texture (but should be quartered by settings now)
Lowest settings + 40 units (including lasers, no info bars) 27  => * info bars don't cost FPS
Lowest settings + 40 units (including lasers)               27  => Each unit cost FPS