using System.Collections.Generic;

public class SquareRoot
{
    static readonly List<float> Values;

    /// <summary>
    ///     Returns approximate square root of passed number in range [0, 200].
    /// </summary>
    /// <param name="input">Number to get square root of.</param>
    /// <returns>Approximate square root.</returns>
    public static float GetValue(float input)
    {
        return Values[(int)input];
    }

    static SquareRoot()
    {
        Values = new()
        {
            0f,
            1f,
            1.4142135623731f,
            1.73205080756888f,
            2f,
            2.23606797749979f,
            2.44948974278318f,
            2.64575131106459f,
            2.82842712474619f,
            3f,
            3.16227766016838f,
            3.3166247903554f,
            3.46410161513775f,
            3.60555127546399f,
            3.74165738677394f,
            3.87298334620742f,
            4f,
            4.12310562561766f,
            4.24264068711928f,
            4.35889894354067f,
            4.47213595499958f,
            4.58257569495584f,
            4.69041575982343f,
            4.79583152331272f,
            4.89897948556636f,
            5f,
            5.09901951359278f,
            5.19615242270663f,
            5.29150262212918f,
            5.3851648071345f,
            5.47722557505166f,
            5.56776436283002f,
            5.65685424949238f,
            5.74456264653803f,
            5.8309518948453f,
            5.91607978309962f,
            6f,
            6.08276253029822f,
            6.16441400296898f,
            6.2449979983984f,
            6.32455532033676f,
            6.40312423743285f,
            6.48074069840786f,
            6.557438524302f,
            6.6332495807108f,
            6.70820393249937f,
            6.78232998312527f,
            6.85565460040104f,
            6.92820323027551f,
            7f,
            7.07106781186548f,
            7.14142842854285f,
            7.21110255092798f,
            7.28010988928052f,
            7.34846922834953f,
            7.41619848709566f,
            7.48331477354788f,
            7.54983443527075f,
            7.61577310586391f,
            7.68114574786861f,
            7.74596669241483f,
            7.81024967590665f,
            7.87400787401181f,
            7.93725393319377f,
            8f,
            8.06225774829855f,
            8.12403840463596f,
            8.18535277187245f,
            8.24621125123532f,
            8.30662386291807f,
            8.36660026534076f,
            8.42614977317636f,
            8.48528137423857f,
            8.54400374531753f,
            8.60232526704263f,
            8.66025403784439f,
            8.71779788708135f,
            8.77496438739212f,
            8.83176086632785f,
            8.88819441731559f,
            8.94427190999916f,
            9f,
            9.05538513813742f,
            9.1104335791443f,
            9.16515138991168f,
            9.21954445729289f,
            9.2736184954957f,
            9.32737905308882f,
            9.38083151964686f,
            9.4339811320566f,
            9.48683298050514f,
            9.53939201416946f,
            9.59166304662544f,
            9.64365076099295f,
            9.69535971483266f,
            9.74679434480896f,
            9.79795897113271f,
            9.8488578017961f,
            9.89949493661167f,
            9.9498743710662f,
            10f,
            10.0498756211209f,
            10.0995049383621f,
            10.1488915650922f,
            10.1980390271856f,
            10.2469507659596f,
            10.295630140987f,
            10.3440804327886f,
            10.3923048454133f,
            10.4403065089106f,
            10.4880884817015f,
            10.5356537528527f,
            10.5830052442584f,
            10.6301458127346f,
            10.6770782520313f,
            10.7238052947636f,
            10.770329614269f,
            10.816653826392f,
            10.8627804912002f,
            10.9087121146357f,
            10.9544511501033f,
            11f,
            11.0453610171873f,
            11.0905365064094f,
            11.13552872566f,
            11.1803398874989f,
            11.2249721603218f,
            11.2694276695846f,
            11.3137084989848f,
            11.3578166916005f,
            11.4017542509914f,
            11.4455231422596f,
            11.4891252930761f,
            11.5325625946708f,
            11.5758369027902f,
            11.6189500386223f,
            11.6619037896906f,
            11.7046999107196f,
            11.7473401244707f,
            11.7898261225516f,
            11.8321595661992f,
            11.8743420870379f,
            11.916375287813f,
            11.9582607431014f,
            12f,
            12.0415945787923f,
            12.0830459735946f,
            12.1243556529821f,
            12.1655250605964f,
            12.2065556157337f,
            12.2474487139159f,
            12.2882057274445f,
            12.328828005938f,
            12.369316876853f,
            12.4096736459909f,
            12.4498995979887f,
            12.4899959967968f,
            12.5299640861417f,
            12.5698050899765f,
            12.6095202129185f,
            12.6491106406735f,
            12.6885775404495f,
            12.7279220613579f,
            12.7671453348037f,
            12.8062484748657f,
            12.8452325786651f,
            12.8840987267251f,
            12.9228479833201f,
            12.9614813968157f,
            13f,
            13.0384048104053f,
            13.076696830622f,
            13.114877048604f,
            13.1529464379659f,
            13.1909059582729f,
            13.228756555323f,
            13.2664991614216f,
            13.3041346956501f,
            13.3416640641263f,
            13.3790881602597f,
            13.4164078649987f,
            13.4536240470737f,
            13.490737563232f,
            13.5277492584687f,
            13.5646599662505f,
            13.6014705087354f,
            13.6381816969859f,
            13.6747943311773f,
            13.7113092008021f,
            13.7477270848675f,
            13.7840487520902f,
            13.8202749610853f,
            13.856406460551f,
            13.8924439894498f,
            13.9283882771841f,
            13.9642400437689f,
            14f,
            14.0356688476182f,
            14.0712472794703f,
            14.1067359796659f,
            14.142135623731f
        };
    }
}
